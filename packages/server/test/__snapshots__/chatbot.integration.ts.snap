// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`ChatbotController Integration GET course/:courseId should return course settings (ROLE: admin) 1`] = `
{
  "courseId": 1,
  "id": 1,
  "llmId": 1,
  "llmModel": {
    "additionalNotes": [],
    "id": 1,
    "isRecommended": false,
    "isText": true,
    "isThinking": false,
    "isVision": false,
    "modelName": "qwen2.5:7b",
    "provider": {
      "additionalNotes": [],
      "baseUrl": "https://fake-url.com",
      "defaultModel": {
        "additionalNotes": [],
        "id": 1,
        "isRecommended": false,
        "isText": true,
        "isThinking": false,
        "isVision": false,
        "modelName": "qwen2.5:7b",
        "providerId": 1,
        "providerNotes": [],
      },
      "defaultModelId": 1,
      "defaultVisionModel": {
        "additionalNotes": [],
        "id": 1,
        "isRecommended": false,
        "isText": true,
        "isThinking": false,
        "isVision": false,
        "modelName": "qwen2.5:7b",
        "providerId": 1,
        "providerNotes": [],
      },
      "defaultVisionModelId": 1,
      "hasApiKey": false,
      "headers": {},
      "id": 1,
      "nickname": "Ollama Provider",
      "orgChatbotSettingsId": 1,
      "providerType": "ollama",
    },
    "providerId": 1,
    "providerNotes": [],
  },
  "organizationSettingsId": 1,
  "prompt": "You are a course help assistant for a course. Here are some rules for question answering:  1) You may use markdown for styling your answers. 2) Refer to context when you see fit. 3) Try not giving the assignment question answers directly to students, instead provide hints.",
  "similarityThresholdDocuments": 0.55,
  "similarityThresholdQuestions": 0.9,
  "temperature": 0.7,
  "topK": 5,
  "usingDefaultModel": false,
  "usingDefaultPrompt": false,
  "usingDefaultSimilarityThresholdDocuments": false,
  "usingDefaultSimilarityThresholdQuestions": false,
  "usingDefaultTemperature": false,
  "usingDefaultTopK": false,
}
`;

exports[`ChatbotController Integration GET course/:courseId should return course settings (ROLE: professor) 1`] = `
{
  "courseId": 1,
  "id": 1,
  "llmId": 1,
  "llmModel": {
    "additionalNotes": [],
    "id": 1,
    "isRecommended": false,
    "isText": true,
    "isThinking": false,
    "isVision": false,
    "modelName": "qwen2.5:7b",
    "provider": {
      "additionalNotes": [],
      "baseUrl": "https://fake-url.com",
      "defaultModel": {
        "additionalNotes": [],
        "id": 1,
        "isRecommended": false,
        "isText": true,
        "isThinking": false,
        "isVision": false,
        "modelName": "qwen2.5:7b",
        "providerId": 1,
        "providerNotes": [],
      },
      "defaultModelId": 1,
      "defaultVisionModel": {
        "additionalNotes": [],
        "id": 1,
        "isRecommended": false,
        "isText": true,
        "isThinking": false,
        "isVision": false,
        "modelName": "qwen2.5:7b",
        "providerId": 1,
        "providerNotes": [],
      },
      "defaultVisionModelId": 1,
      "hasApiKey": false,
      "headers": {},
      "id": 1,
      "nickname": "Ollama Provider",
      "orgChatbotSettingsId": 1,
      "providerType": "ollama",
    },
    "providerId": 1,
    "providerNotes": [],
  },
  "organizationSettingsId": 1,
  "prompt": "You are a course help assistant for a course. Here are some rules for question answering:  1) You may use markdown for styling your answers. 2) Refer to context when you see fit. 3) Try not giving the assignment question answers directly to students, instead provide hints.",
  "similarityThresholdDocuments": 0.55,
  "similarityThresholdQuestions": 0.9,
  "temperature": 0.7,
  "topK": 5,
  "usingDefaultModel": false,
  "usingDefaultPrompt": false,
  "usingDefaultSimilarityThresholdDocuments": false,
  "usingDefaultSimilarityThresholdQuestions": false,
  "usingDefaultTemperature": false,
  "usingDefaultTopK": false,
}
`;

exports[`ChatbotController Integration GET course/:courseId should return course settings (ROLE: ta) 1`] = `
{
  "courseId": 1,
  "id": 1,
  "llmId": 1,
  "llmModel": {
    "additionalNotes": [],
    "id": 1,
    "isRecommended": false,
    "isText": true,
    "isThinking": false,
    "isVision": false,
    "modelName": "qwen2.5:7b",
    "provider": {
      "additionalNotes": [],
      "baseUrl": "https://fake-url.com",
      "defaultModel": {
        "additionalNotes": [],
        "id": 1,
        "isRecommended": false,
        "isText": true,
        "isThinking": false,
        "isVision": false,
        "modelName": "qwen2.5:7b",
        "providerId": 1,
        "providerNotes": [],
      },
      "defaultModelId": 1,
      "defaultVisionModel": {
        "additionalNotes": [],
        "id": 1,
        "isRecommended": false,
        "isText": true,
        "isThinking": false,
        "isVision": false,
        "modelName": "qwen2.5:7b",
        "providerId": 1,
        "providerNotes": [],
      },
      "defaultVisionModelId": 1,
      "hasApiKey": false,
      "headers": {},
      "id": 1,
      "nickname": "Ollama Provider",
      "orgChatbotSettingsId": 1,
      "providerType": "ollama",
    },
    "providerId": 1,
    "providerNotes": [],
  },
  "organizationSettingsId": 1,
  "prompt": "You are a course help assistant for a course. Here are some rules for question answering:  1) You may use markdown for styling your answers. 2) Refer to context when you see fit. 3) Try not giving the assignment question answers directly to students, instead provide hints.",
  "similarityThresholdDocuments": 0.55,
  "similarityThresholdQuestions": 0.9,
  "temperature": 0.7,
  "topK": 5,
  "usingDefaultModel": false,
  "usingDefaultPrompt": false,
  "usingDefaultSimilarityThresholdDocuments": false,
  "usingDefaultSimilarityThresholdQuestions": false,
  "usingDefaultTemperature": false,
  "usingDefaultTopK": false,
}
`;

exports[`ChatbotController Integration GET course/:courseId should upsert if course settings not found (ROLE: admin) 1`] = `
{
  "course": {
    "asyncQuestionDisplayTypes": [],
    "coordinator_email": null,
    "courseInviteCode": "invite-code",
    "deletedAt": null,
    "enabled": true,
    "id": 1,
    "name": "CS 304",
    "sectionGroupName": "001",
    "selfEnroll": false,
    "superCourseId": null,
    "timezone": "America/Los Angeles",
    "zoomLink": null,
  },
  "courseId": 1,
  "id": 1,
  "llmId": 1,
  "llmModel": {
    "additionalNotes": [],
    "id": 1,
    "isRecommended": false,
    "isText": true,
    "isThinking": false,
    "isVision": false,
    "modelName": "qwen2.5:7b",
    "provider": {
      "additionalNotes": [],
      "baseUrl": "https://fake-url.com",
      "defaultModel": {
        "additionalNotes": [],
        "id": 1,
        "isRecommended": false,
        "isText": true,
        "isThinking": false,
        "isVision": false,
        "modelName": "qwen2.5:7b",
        "providerId": 1,
        "providerNotes": [],
      },
      "defaultModelId": 1,
      "defaultVisionModel": {
        "additionalNotes": [],
        "id": 1,
        "isRecommended": false,
        "isText": true,
        "isThinking": false,
        "isVision": false,
        "modelName": "qwen2.5:7b",
        "providerId": 1,
        "providerNotes": [],
      },
      "defaultVisionModelId": 1,
      "hasApiKey": false,
      "headers": {},
      "id": 1,
      "nickname": "Ollama Provider",
      "orgChatbotSettingsId": 1,
      "providerType": "ollama",
    },
    "providerId": 1,
    "providerNotes": [],
  },
  "organizationSettings": {
    "defaultProviderId": 1,
    "default_prompt": null,
    "default_similarityThresholdDocuments": null,
    "default_similarityThresholdQuestions": null,
    "default_temperature": null,
    "default_topK": null,
    "id": 1,
    "organizationId": 1,
  },
  "organizationSettingsId": 1,
  "prompt": "You are a course help assistant for a course. Here are some rules for question answering:  1) You may use markdown for styling your answers. 2) Refer to context when you see fit. 3) Try not giving the assignment question answers directly to students, instead provide hints.",
  "similarityThresholdDocuments": 0.55,
  "similarityThresholdQuestions": 0.9,
  "temperature": 0.7,
  "topK": 5,
  "usingDefaultModel": true,
  "usingDefaultPrompt": true,
  "usingDefaultSimilarityThresholdDocuments": true,
  "usingDefaultSimilarityThresholdQuestions": true,
  "usingDefaultTemperature": true,
  "usingDefaultTopK": true,
}
`;

exports[`ChatbotController Integration GET course/:courseId should upsert if course settings not found (ROLE: professor) 1`] = `
{
  "course": {
    "asyncQuestionDisplayTypes": [],
    "coordinator_email": null,
    "courseInviteCode": "invite-code",
    "deletedAt": null,
    "enabled": true,
    "id": 1,
    "name": "CS 304",
    "sectionGroupName": "001",
    "selfEnroll": false,
    "superCourseId": null,
    "timezone": "America/Los Angeles",
    "zoomLink": null,
  },
  "courseId": 1,
  "id": 1,
  "llmId": 1,
  "llmModel": {
    "additionalNotes": [],
    "id": 1,
    "isRecommended": false,
    "isText": true,
    "isThinking": false,
    "isVision": false,
    "modelName": "qwen2.5:7b",
    "provider": {
      "additionalNotes": [],
      "baseUrl": "https://fake-url.com",
      "defaultModel": {
        "additionalNotes": [],
        "id": 1,
        "isRecommended": false,
        "isText": true,
        "isThinking": false,
        "isVision": false,
        "modelName": "qwen2.5:7b",
        "providerId": 1,
        "providerNotes": [],
      },
      "defaultModelId": 1,
      "defaultVisionModel": {
        "additionalNotes": [],
        "id": 1,
        "isRecommended": false,
        "isText": true,
        "isThinking": false,
        "isVision": false,
        "modelName": "qwen2.5:7b",
        "providerId": 1,
        "providerNotes": [],
      },
      "defaultVisionModelId": 1,
      "hasApiKey": false,
      "headers": {},
      "id": 1,
      "nickname": "Ollama Provider",
      "orgChatbotSettingsId": 1,
      "providerType": "ollama",
    },
    "providerId": 1,
    "providerNotes": [],
  },
  "organizationSettings": {
    "defaultProviderId": 1,
    "default_prompt": null,
    "default_similarityThresholdDocuments": null,
    "default_similarityThresholdQuestions": null,
    "default_temperature": null,
    "default_topK": null,
    "id": 1,
    "organizationId": 1,
  },
  "organizationSettingsId": 1,
  "prompt": "You are a course help assistant for a course. Here are some rules for question answering:  1) You may use markdown for styling your answers. 2) Refer to context when you see fit. 3) Try not giving the assignment question answers directly to students, instead provide hints.",
  "similarityThresholdDocuments": 0.55,
  "similarityThresholdQuestions": 0.9,
  "temperature": 0.7,
  "topK": 5,
  "usingDefaultModel": true,
  "usingDefaultPrompt": true,
  "usingDefaultSimilarityThresholdDocuments": true,
  "usingDefaultSimilarityThresholdQuestions": true,
  "usingDefaultTemperature": true,
  "usingDefaultTopK": true,
}
`;

exports[`ChatbotController Integration GET course/:courseId should upsert if course settings not found (ROLE: ta) 1`] = `
{
  "course": {
    "asyncQuestionDisplayTypes": [],
    "coordinator_email": null,
    "courseInviteCode": "invite-code",
    "deletedAt": null,
    "enabled": true,
    "id": 1,
    "name": "CS 304",
    "sectionGroupName": "001",
    "selfEnroll": false,
    "superCourseId": null,
    "timezone": "America/Los Angeles",
    "zoomLink": null,
  },
  "courseId": 1,
  "id": 1,
  "llmId": 1,
  "llmModel": {
    "additionalNotes": [],
    "id": 1,
    "isRecommended": false,
    "isText": true,
    "isThinking": false,
    "isVision": false,
    "modelName": "qwen2.5:7b",
    "provider": {
      "additionalNotes": [],
      "baseUrl": "https://fake-url.com",
      "defaultModel": {
        "additionalNotes": [],
        "id": 1,
        "isRecommended": false,
        "isText": true,
        "isThinking": false,
        "isVision": false,
        "modelName": "qwen2.5:7b",
        "providerId": 1,
        "providerNotes": [],
      },
      "defaultModelId": 1,
      "defaultVisionModel": {
        "additionalNotes": [],
        "id": 1,
        "isRecommended": false,
        "isText": true,
        "isThinking": false,
        "isVision": false,
        "modelName": "qwen2.5:7b",
        "providerId": 1,
        "providerNotes": [],
      },
      "defaultVisionModelId": 1,
      "hasApiKey": false,
      "headers": {},
      "id": 1,
      "nickname": "Ollama Provider",
      "orgChatbotSettingsId": 1,
      "providerType": "ollama",
    },
    "providerId": 1,
    "providerNotes": [],
  },
  "organizationSettings": {
    "defaultProviderId": 1,
    "default_prompt": null,
    "default_similarityThresholdDocuments": null,
    "default_similarityThresholdQuestions": null,
    "default_temperature": null,
    "default_topK": null,
    "id": 1,
    "organizationId": 1,
  },
  "organizationSettingsId": 1,
  "prompt": "You are a course help assistant for a course. Here are some rules for question answering:  1) You may use markdown for styling your answers. 2) Refer to context when you see fit. 3) Try not giving the assignment question answers directly to students, instead provide hints.",
  "similarityThresholdDocuments": 0.55,
  "similarityThresholdQuestions": 0.9,
  "temperature": 0.7,
  "topK": 5,
  "usingDefaultModel": true,
  "usingDefaultPrompt": true,
  "usingDefaultSimilarityThresholdDocuments": true,
  "usingDefaultSimilarityThresholdQuestions": true,
  "usingDefaultTemperature": true,
  "usingDefaultTopK": true,
}
`;

exports[`ChatbotController Integration GET course/:courseId/provider should get list of providers from organization (ROLE: admin) 1`] = `
[
  {
    "additionalNotes": [],
    "availableModels": [
      {
        "additionalNotes": [],
        "id": 1,
        "isRecommended": false,
        "isText": true,
        "isThinking": false,
        "isVision": false,
        "modelName": "qwen2.5:7b",
        "providerId": 1,
        "providerNotes": [],
      },
    ],
    "baseUrl": "https://fake-url.com",
    "defaultModel": {
      "additionalNotes": [],
      "id": 1,
      "isRecommended": false,
      "isText": true,
      "isThinking": false,
      "isVision": false,
      "modelName": "qwen2.5:7b",
      "providerId": 1,
      "providerNotes": [],
    },
    "defaultModelId": 1,
    "defaultVisionModelId": 1,
    "hasApiKey": false,
    "headers": {},
    "id": 1,
    "nickname": "Ollama Provider",
    "orgChatbotSettingsId": 1,
    "providerType": "ollama",
  },
  {
    "additionalNotes": [],
    "availableModels": [
      {
        "additionalNotes": [],
        "id": 2,
        "isRecommended": false,
        "isText": true,
        "isThinking": false,
        "isVision": false,
        "modelName": "new-model-1",
        "providerId": 2,
        "providerNotes": [],
      },
      {
        "additionalNotes": [],
        "id": 3,
        "isRecommended": false,
        "isText": true,
        "isThinking": false,
        "isVision": false,
        "modelName": "new-model-1",
        "providerId": 2,
        "providerNotes": [],
      },
    ],
    "baseUrl": "https://fake-url.com",
    "defaultModel": {
      "additionalNotes": [],
      "id": 3,
      "isRecommended": false,
      "isText": true,
      "isThinking": false,
      "isVision": false,
      "modelName": "new-model-1",
      "providerId": 2,
      "providerNotes": [],
    },
    "defaultModelId": 3,
    "defaultVisionModelId": null,
    "hasApiKey": false,
    "headers": {},
    "id": 2,
    "nickname": "Ollama Provider",
    "orgChatbotSettingsId": 1,
    "providerType": "ollama",
  },
]
`;

exports[`ChatbotController Integration GET course/:courseId/provider should get list of providers from organization (ROLE: professor) 1`] = `
[
  {
    "additionalNotes": [],
    "availableModels": [
      {
        "additionalNotes": [],
        "id": 1,
        "isRecommended": false,
        "isText": true,
        "isThinking": false,
        "isVision": false,
        "modelName": "qwen2.5:7b",
        "providerId": 1,
        "providerNotes": [],
      },
    ],
    "baseUrl": "https://fake-url.com",
    "defaultModel": {
      "additionalNotes": [],
      "id": 1,
      "isRecommended": false,
      "isText": true,
      "isThinking": false,
      "isVision": false,
      "modelName": "qwen2.5:7b",
      "providerId": 1,
      "providerNotes": [],
    },
    "defaultModelId": 1,
    "defaultVisionModelId": 1,
    "hasApiKey": false,
    "headers": {},
    "id": 1,
    "nickname": "Ollama Provider",
    "orgChatbotSettingsId": 1,
    "providerType": "ollama",
  },
  {
    "additionalNotes": [],
    "availableModels": [
      {
        "additionalNotes": [],
        "id": 2,
        "isRecommended": false,
        "isText": true,
        "isThinking": false,
        "isVision": false,
        "modelName": "new-model-1",
        "providerId": 2,
        "providerNotes": [],
      },
      {
        "additionalNotes": [],
        "id": 3,
        "isRecommended": false,
        "isText": true,
        "isThinking": false,
        "isVision": false,
        "modelName": "new-model-1",
        "providerId": 2,
        "providerNotes": [],
      },
    ],
    "baseUrl": "https://fake-url.com",
    "defaultModel": {
      "additionalNotes": [],
      "id": 3,
      "isRecommended": false,
      "isText": true,
      "isThinking": false,
      "isVision": false,
      "modelName": "new-model-1",
      "providerId": 2,
      "providerNotes": [],
    },
    "defaultModelId": 3,
    "defaultVisionModelId": null,
    "hasApiKey": false,
    "headers": {},
    "id": 2,
    "nickname": "Ollama Provider",
    "orgChatbotSettingsId": 1,
    "providerType": "ollama",
  },
]
`;

exports[`ChatbotController Integration GET course/:courseId/provider should get list of providers from organization (ROLE: ta) 1`] = `
[
  {
    "additionalNotes": [],
    "availableModels": [
      {
        "additionalNotes": [],
        "id": 1,
        "isRecommended": false,
        "isText": true,
        "isThinking": false,
        "isVision": false,
        "modelName": "qwen2.5:7b",
        "providerId": 1,
        "providerNotes": [],
      },
    ],
    "baseUrl": "https://fake-url.com",
    "defaultModel": {
      "additionalNotes": [],
      "id": 1,
      "isRecommended": false,
      "isText": true,
      "isThinking": false,
      "isVision": false,
      "modelName": "qwen2.5:7b",
      "providerId": 1,
      "providerNotes": [],
    },
    "defaultModelId": 1,
    "defaultVisionModelId": 1,
    "hasApiKey": false,
    "headers": {},
    "id": 1,
    "nickname": "Ollama Provider",
    "orgChatbotSettingsId": 1,
    "providerType": "ollama",
  },
  {
    "additionalNotes": [],
    "availableModels": [
      {
        "additionalNotes": [],
        "id": 2,
        "isRecommended": false,
        "isText": true,
        "isThinking": false,
        "isVision": false,
        "modelName": "new-model-1",
        "providerId": 2,
        "providerNotes": [],
      },
      {
        "additionalNotes": [],
        "id": 3,
        "isRecommended": false,
        "isText": true,
        "isThinking": false,
        "isVision": false,
        "modelName": "new-model-1",
        "providerId": 2,
        "providerNotes": [],
      },
    ],
    "baseUrl": "https://fake-url.com",
    "defaultModel": {
      "additionalNotes": [],
      "id": 3,
      "isRecommended": false,
      "isText": true,
      "isThinking": false,
      "isVision": false,
      "modelName": "new-model-1",
      "providerId": 2,
      "providerNotes": [],
    },
    "defaultModelId": 3,
    "defaultVisionModelId": null,
    "hasApiKey": false,
    "headers": {},
    "id": 2,
    "nickname": "Ollama Provider",
    "orgChatbotSettingsId": 1,
    "providerType": "ollama",
  },
]
`;

exports[`ChatbotController Integration GET organization/:oid should return organization settings 1`] = `
{
  "courseSettingsInstances": [],
  "defaultProvider": null,
  "defaultProviderId": null,
  "default_prompt": null,
  "default_similarityThresholdDocuments": null,
  "default_similarityThresholdQuestions": null,
  "default_temperature": null,
  "default_topK": null,
  "id": 1,
  "organizationId": 1,
  "providers": [],
}
`;

exports[`ChatbotController Integration GET organization/:oid/course should return any course settings for the organization 1`] = `[]`;

exports[`ChatbotController Integration GET organization/:oid/provider should return organization providers 1`] = `
[
  {
    "additionalNotes": [],
    "availableModels": [
      {
        "additionalNotes": [],
        "id": 1,
        "isRecommended": false,
        "isText": true,
        "isThinking": false,
        "isVision": false,
        "modelName": "qwen2.5:7b",
        "providerId": 1,
        "providerNotes": [],
      },
    ],
    "baseUrl": "https://fake-url.com",
    "defaultModel": {
      "additionalNotes": [],
      "id": 1,
      "isRecommended": false,
      "isText": true,
      "isThinking": false,
      "isVision": false,
      "modelName": "qwen2.5:7b",
      "providerId": 1,
      "providerNotes": [],
    },
    "defaultModelId": 1,
    "defaultVisionModel": {
      "additionalNotes": [],
      "id": 1,
      "isRecommended": false,
      "isText": true,
      "isThinking": false,
      "isVision": false,
      "modelName": "qwen2.5:7b",
      "providerId": 1,
      "providerNotes": [],
    },
    "defaultVisionModelId": 1,
    "hasApiKey": false,
    "headers": {},
    "id": 1,
    "nickname": "Ollama Provider",
    "orgChatbotSettingsId": 1,
    "providerType": "ollama",
  },
]
`;

exports[`ChatbotController Integration GET organization/:oid/provider/:providerId/available should return the available models for the provider (ollama) 1`] = `
[
  [
    {
      "families": [
        "ollama",
      ],
      "id": 1,
      "isText": false,
      "isThinking": false,
      "isVision": false,
      "modelName": "ollama-model-1",
      "parameterSize": "0M",
    },
    {
      "families": [
        "ollama",
      ],
      "id": 2,
      "isText": false,
      "isThinking": false,
      "isVision": false,
      "modelName": "ollama-model-2",
      "parameterSize": "0M",
    },
    {
      "families": [
        "ollama",
      ],
      "id": 3,
      "isText": false,
      "isThinking": false,
      "isVision": false,
      "modelName": "ollama-model-3",
      "parameterSize": "0M",
    },
  ],
]
`;

exports[`ChatbotController Integration GET organization/:oid/provider/:providerId/available should return the available models for the provider (openai) 1`] = `
[
  [
    {
      "families": [
        "openai",
      ],
      "id": 1,
      "isText": false,
      "isThinking": false,
      "isVision": false,
      "modelName": "openai-model-1",
      "parameterSize": "0M",
    },
    {
      "families": [
        "openai",
      ],
      "id": 2,
      "isText": false,
      "isThinking": false,
      "isVision": false,
      "modelName": "openai-model-2",
      "parameterSize": "0M",
    },
    {
      "families": [
        "openai",
      ],
      "id": 3,
      "isText": false,
      "isThinking": false,
      "isVision": false,
      "modelName": "openai-model-3",
      "parameterSize": "0M",
    },
  ],
]
`;

exports[`ChatbotController Integration PATCH organization/:oid/provider/:providerId should update the provider 1`] = `
{
  "additionalNotes": [],
  "availableModels": [
    {
      "additionalNotes": [],
      "id": 5,
      "isRecommended": false,
      "isText": true,
      "isThinking": true,
      "isVision": false,
      "modelName": "model6",
      "providerId": 1,
      "providerNotes": [],
    },
  ],
  "baseUrl": "https://new-url/",
  "defaultModel": {
    "additionalNotes": [],
    "id": 3,
    "isRecommended": false,
    "isText": true,
    "isThinking": false,
    "isVision": false,
    "modelName": "model4",
    "providerId": 3,
    "providerNotes": [],
  },
  "defaultModelId": 3,
  "defaultVisionModel": {
    "additionalNotes": [],
    "id": 2,
    "isRecommended": false,
    "isText": false,
    "isThinking": false,
    "isVision": true,
    "modelName": "model3",
    "providerId": 2,
    "providerNotes": [],
  },
  "defaultVisionModelId": 2,
  "hasApiKey": false,
  "headers": {},
  "id": 1,
  "nickname": "Ollama Provider",
  "orgChatbotSettingsId": 1,
  "providerType": "ollama",
}
`;

exports[`ChatbotController Integration POST organization/:oid should create organization settings 1`] = `
{
  "defaultProvider": {
    "additionalNotes": [],
    "availableModels": [
      {
        "additionalNotes": [],
        "id": 1,
        "isRecommended": false,
        "isText": true,
        "isThinking": false,
        "isVision": false,
        "modelName": "model1",
        "providerId": 1,
        "providerNotes": [],
      },
      {
        "additionalNotes": [],
        "id": 2,
        "isRecommended": false,
        "isText": false,
        "isThinking": false,
        "isVision": true,
        "modelName": "model2",
        "providerId": 1,
        "providerNotes": [],
      },
    ],
    "baseUrl": null,
    "defaultModel": {
      "additionalNotes": [],
      "id": 1,
      "isRecommended": false,
      "isText": true,
      "isThinking": false,
      "isVision": false,
      "modelName": "model1",
      "providerId": 1,
      "providerNotes": [],
    },
    "defaultModelId": 1,
    "defaultVisionModel": {
      "additionalNotes": [],
      "id": 2,
      "isRecommended": false,
      "isText": false,
      "isThinking": false,
      "isVision": true,
      "modelName": "model2",
      "providerId": 1,
      "providerNotes": [],
    },
    "defaultVisionModelId": 2,
    "hasApiKey": false,
    "headers": {},
    "id": 1,
    "nickname": null,
    "orgChatbotSettingsId": 1,
    "providerType": "ollama",
  },
  "defaultProviderId": 1,
  "default_prompt": null,
  "default_similarityThresholdDocuments": null,
  "default_similarityThresholdQuestions": null,
  "default_temperature": null,
  "default_topK": null,
  "id": 1,
  "organizationId": 1,
  "providers": [
    {
      "additionalNotes": [],
      "availableModels": [
        {
          "additionalNotes": [],
          "id": 2,
          "isRecommended": false,
          "isText": false,
          "isThinking": false,
          "isVision": true,
          "modelName": "model2",
          "providerId": 1,
          "providerNotes": [],
        },
        {
          "additionalNotes": [],
          "id": 1,
          "isRecommended": false,
          "isText": true,
          "isThinking": false,
          "isVision": false,
          "modelName": "model1",
          "providerId": 1,
          "providerNotes": [],
        },
      ],
      "baseUrl": null,
      "defaultModel": {
        "additionalNotes": [],
        "id": 1,
        "isRecommended": false,
        "isText": true,
        "isThinking": false,
        "isVision": false,
        "modelName": "model1",
        "providerId": 1,
        "providerNotes": [],
      },
      "defaultModelId": 1,
      "defaultVisionModel": {
        "additionalNotes": [],
        "id": 2,
        "isRecommended": false,
        "isText": false,
        "isThinking": false,
        "isVision": true,
        "modelName": "model2",
        "providerId": 1,
        "providerNotes": [],
      },
      "defaultVisionModelId": 2,
      "hasApiKey": false,
      "headers": {},
      "id": 1,
      "nickname": null,
      "orgChatbotSettingsId": 1,
      "providerType": "ollama",
    },
  ],
}
`;

exports[`ChatbotController Integration POST organization/:oid/ollama should return a series of LLM descriptions from Ollama 1`] = `
[
  [
    {
      "families": [
        "ollama",
      ],
      "id": 1,
      "isText": false,
      "isThinking": false,
      "isVision": false,
      "modelName": "ollama-model-1",
      "parameterSize": "0M",
    },
    {
      "families": [
        "ollama",
      ],
      "id": 2,
      "isText": false,
      "isThinking": false,
      "isVision": false,
      "modelName": "ollama-model-2",
      "parameterSize": "0M",
    },
    {
      "families": [
        "ollama",
      ],
      "id": 3,
      "isText": false,
      "isThinking": false,
      "isVision": false,
      "modelName": "ollama-model-3",
      "parameterSize": "0M",
    },
  ],
]
`;

exports[`ChatbotController Integration POST organization/:oid/openai should return a series of LLM descriptions about OpenAI models 1`] = `
[
  [
    {
      "families": [
        "openai",
      ],
      "id": 1,
      "isText": false,
      "isThinking": false,
      "isVision": false,
      "modelName": "openai-model-1",
      "parameterSize": "0M",
    },
    {
      "families": [
        "openai",
      ],
      "id": 2,
      "isText": false,
      "isThinking": false,
      "isVision": false,
      "modelName": "openai-model-2",
      "parameterSize": "0M",
    },
    {
      "families": [
        "openai",
      ],
      "id": 3,
      "isText": false,
      "isThinking": false,
      "isVision": false,
      "modelName": "openai-model-3",
      "parameterSize": "0M",
    },
  ],
]
`;
