services:
  postgresql:
    image: ankane/pgvector
    restart: always
    ports:
      - '5432:5432'
    volumes:
      - ./infrastructure/dev/docker-postgresql-multiple-databases:/docker-entrypoint-initdb.d
      - pg:/var/lib/postgresql/data
    environment:
      - POSTGRES_MULTIPLE_DATABASES=prod,dev,test,chatbot
    env_file:
      - ./packages/server/postgres.env # this is where the root user credentials are set. Please make this file with postgres.env.example as a base if you haven't already
    networks:
      - api
  redis:
    image: redis:alpine
    restart: always
    ports:
      - '6379:6379'
    networks:
      - api
  frontend:
    container_name: helpme_frontend
    command: yarn workspace @koh/frontend dev
    depends_on:
      - backend
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - api
  backend:
    container_name: helpme_backend
    command: yarn workspace @koh/server dev
    depends_on:
      - postgresql
      - redis
      - httpd
    env_file:
      - ./packages/server/.env
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - api
  httpd:
    build:
      context: .
      dockerfile: Dockerfile.httpd
    ports:
      - '80:80'
    networks:
      - api
  gotenberg: # Used for converting files to pdf
    image: gotenberg/gotenberg:8
    restart: always
    ports:
      - "3004:3000" # access via 3004. It's 3000 inside the container
    networks:
      - api
    command:
      - "gotenberg"
      - "--api-timeout=60s"
volumes:
  pg:
    driver: local

networks:
  api:
    driver: bridge
